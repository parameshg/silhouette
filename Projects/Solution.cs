// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Silhouette.Projects
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\External\silhouette\Projects\Solution.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class Solution : SolutionBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("Microsoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio Vers" +
                    "ion 17\r\nVisualStudioVersion = 17.4.33103.184\r\nMinimumVisualStudioVersion = 10.0." +
                    "40219.1\r\n\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"");
            
            #line 8 "C:\Dev\External\silhouette\Projects\Solution.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Prefix));
            
            #line default
            #line hidden
            this.Write(@".Domain"", ""Backend.Domain\Backend.Domain.csproj"", ""{BCA3B2B1-C7FA-4F58-8D43-74F456540677}""
EndProject
Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = ""Kernel"", ""Kernel"", ""{06D8A493-BEE5-4F3C-8353-030BF93D3DA8}""
EndProject
Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = ""Infrastructure"", ""Infrastructure"", ""{4B48AAF9-FD1E-4F64-A305-7AFEFBAD6DE0}""
EndProject
Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = ""Presentation"", ""Presentation"", ""{9F283AC1-BDD4-4A50-8934-6D50C6CE6ED0}""
EndProject
Project(""{9A19103F-16F7-4668-BE54-9A1E7A4F7556}"") = """);
            
            #line 16 "C:\Dev\External\silhouette\Projects\Solution.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Prefix));
            
            #line default
            #line hidden
            this.Write(".Server\", \"Backend.Server\\Backend.Server.csproj\", \"{09CE3589-9704-4119-A00E-72B19" +
                    "F4E2149}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"");
            
            #line 18 "C:\Dev\External\silhouette\Projects\Solution.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Prefix));
            
            #line default
            #line hidden
            this.Write(".Database.FileSystem\", \"Backend.Database.FileSystem\\Backend.Database.FileSystem.c" +
                    "sproj\", \"{959A84A8-CD81-4552-B815-347CAFBF27FE}\"\r\nEndProject\r\nProject(\"{9A19103F" +
                    "-16F7-4668-BE54-9A1E7A4F7556}\") = \"");
            
            #line 20 "C:\Dev\External\silhouette\Projects\Solution.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Prefix));
            
            #line default
            #line hidden
            this.Write(".Api.Standalone\", \"Backend.Api.Standalone\\Backend.Api.Standalone.csproj\", \"{97088" +
                    "4EE-8623-4C86-A76D-76C308156019}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B" +
                    "-00C04F79EFBC}\") = \"");
            
            #line 22 "C:\Dev\External\silhouette\Projects\Solution.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Prefix));
            
            #line default
            #line hidden
            this.Write(".Database\", \"Backend.Database\\Backend.Database.csproj\", \"{4708533C-E797-4361-B374" +
                    "-A4073EDE96F9}\"\r\nEndProject\r\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") =" +
                    " \"Backend.Api\", \"Backend.Api\\Backend.Api.csproj\", \"{4D11ECAA-EE10-4DCB-8E2D-ED68" +
                    "1D763FE6}\"\r\nEndProject\r\n\r\nGlobal\r\n\tGlobalSection(SolutionConfigurationPlatforms)" +
                    " = preSolution\r\n\t\tDebug|Any CPU = Debug|Any CPU\r\n\t\tRelease|Any CPU = Release|Any" +
                    " CPU\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSol" +
                    "ution\r\n\t\t{BCA3B2B1-C7FA-4F58-8D43-74F456540677}.Debug|Any CPU.ActiveCfg = Debug|" +
                    "Any CPU\r\n\t\t{BCA3B2B1-C7FA-4F58-8D43-74F456540677}.Debug|Any CPU.Build.0 = Debug|" +
                    "Any CPU\r\n\t\t{BCA3B2B1-C7FA-4F58-8D43-74F456540677}.Release|Any CPU.ActiveCfg = Re" +
                    "lease|Any CPU\r\n\t\t{BCA3B2B1-C7FA-4F58-8D43-74F456540677}.Release|Any CPU.Build.0 " +
                    "= Release|Any CPU\r\n\t\t{09CE3589-9704-4119-A00E-72B19F4E2149}.Debug|Any CPU.Active" +
                    "Cfg = Debug|Any CPU\r\n\t\t{09CE3589-9704-4119-A00E-72B19F4E2149}.Debug|Any CPU.Buil" +
                    "d.0 = Debug|Any CPU\r\n\t\t{09CE3589-9704-4119-A00E-72B19F4E2149}.Release|Any CPU.Ac" +
                    "tiveCfg = Release|Any CPU\r\n\t\t{09CE3589-9704-4119-A00E-72B19F4E2149}.Release|Any " +
                    "CPU.Build.0 = Release|Any CPU\r\n\t\t{959A84A8-CD81-4552-B815-347CAFBF27FE}.Debug|An" +
                    "y CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{959A84A8-CD81-4552-B815-347CAFBF27FE}.Debug|" +
                    "Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{959A84A8-CD81-4552-B815-347CAFBF27FE}.Releas" +
                    "e|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{959A84A8-CD81-4552-B815-347CAFBF27FE}." +
                    "Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{970884EE-8623-4C86-A76D-76C3081560" +
                    "19}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{970884EE-8623-4C86-A76D-76C30815" +
                    "6019}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{970884EE-8623-4C86-A76D-76C30815" +
                    "6019}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{970884EE-8623-4C86-A76D-76" +
                    "C308156019}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{4708533C-E797-4361-B37" +
                    "4-A4073EDE96F9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{4708533C-E797-4361-B" +
                    "374-A4073EDE96F9}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{4708533C-E797-4361-B" +
                    "374-A4073EDE96F9}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{4708533C-E797-" +
                    "4361-B374-A4073EDE96F9}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t\t{4D11ECAA-E" +
                    "E10-4DCB-8E2D-ED681D763FE6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{4D11ECAA" +
                    "-EE10-4DCB-8E2D-ED681D763FE6}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{4D11ECAA" +
                    "-EE10-4DCB-8E2D-ED681D763FE6}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{4D" +
                    "11ECAA-EE10-4DCB-8E2D-ED681D763FE6}.Release|Any CPU.Build.0 = Release|Any CPU\r\n\t" +
                    "EndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSoluti" +
                    "onNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r" +
                    "\n\t\t{BCA3B2B1-C7FA-4F58-8D43-74F456540677} = {06D8A493-BEE5-4F3C-8353-030BF93D3DA" +
                    "8}\r\n\t\t{09CE3589-9704-4119-A00E-72B19F4E2149} = {06D8A493-BEE5-4F3C-8353-030BF93D" +
                    "3DA8}\r\n\t\t{959A84A8-CD81-4552-B815-347CAFBF27FE} = {4B48AAF9-FD1E-4F64-A305-7AFEF" +
                    "BAD6DE0}\r\n\t\t{970884EE-8623-4C86-A76D-76C308156019} = {9F283AC1-BDD4-4A50-8934-6D" +
                    "50C6CE6ED0}\r\n\t\t{4708533C-E797-4361-B374-A4073EDE96F9} = {4B48AAF9-FD1E-4F64-A305" +
                    "-7AFEFBAD6DE0}\r\n\t\t{4D11ECAA-EE10-4DCB-8E2D-ED681D763FE6} = {9F283AC1-BDD4-4A50-8" +
                    "934-6D50C6CE6ED0}\r\n\tEndGlobalSection\r\n\tGlobalSection(ExtensibilityGlobals) = pos" +
                    "tSolution\r\n\t\tSolutionGuid = {E70E2FC0-C8C8-4F40-B456-6C802E12C1E0}\r\n\tEndGlobalSe" +
                    "ction\r\nEndGlobal");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\Dev\External\silhouette\Projects\Solution.tt"

private string _PrefixField;

/// <summary>
/// Access the Prefix parameter of the template.
/// </summary>
private string Prefix
{
    get
    {
        return this._PrefixField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool PrefixValueAcquired = false;
if (this.Session.ContainsKey("Prefix"))
{
    this._PrefixField = ((string)(this.Session["Prefix"]));
    PrefixValueAcquired = true;
}
if ((PrefixValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Prefix");
    if ((data != null))
    {
        this._PrefixField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class SolutionBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
